//BASE DIRECTORIES
basedir = "/home/carlos/projects/kmerO3/test_data/"
datadir = "/home/carlos/projects/"
condabase = "/home/carlos/miniforge3/envs"

//INPUTS
params.raw_fastq =  "$basedir/test_data/*_{1,2}.fq.gz" //"$basedir/fastq/*_{1,2}.fq.gz"

//OUTPUTS
env.results_dir = "$basedir/results"



//*****************//
//      RULES      //
//*****************//

// Rule getFastQCIllumina: Quality control of input and trimmed fastq using FastQC
params.jellyfishCount.conda = "$condabase/fastqc-env"
params.resources.jellyfishCount.cpus= 4
params.resources.jellyfishCount.mem = "4 GB"
params.resources.jellyfishCount.queue = "global" //"fast"
params.resources.jellyfishCount.clusterOptions = "--qos=short" 
params.jellyfishCount.do_fastqc_raw = true
params.jellyfishCount.do_fastqc_trim = true
params.jellyfishCount.do_fastqc_trim_single = true


/*****************//
// GENERAL OPTIONS //
//*****************//

cleanup = false
conda.enabled = true
params.resources.default.cpus = 4
params.resources.default.mem = "8 GB"

profiles {
    conda {
      process.conda = "$condabase/fastqc-env"
    }
}

dag {
    enabled = true
    overwrite = true
    file = "pipeline_dag.html"
}
report {
    enabled = true
    overwrite = true
    file = "report.html"
}

process {
  executor = "slurm"
  queueSize = 200
  submitRateLimit = "10sec"
  queue = "long"
}


process {   
    withName:jellyfishCount{
        container =  'biocontainers/jellyfish:v2.2.10-2-deb_cv1'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
}

docker {
    enabled = true
    sudo = true
}